"""
This script generates the css at `docs/stylesheets/simpleicons.css`.

It generates color for every tech which is specified in `data/simpleicons.json` file
using `simpleicons` library.

Go to simple-icons website: https://simpleicons.org
Check `simpleicons` library: https://github.com/sachinraja/simple-icons-py
"""

from __future__ import annotations

import json
from pathlib import Path
from urllib.request import urlopen

SIMPLEICONS_CSS_PATH = Path("docs/stylesheets/simpleicons.css")
SIMPLEICONS_JSON_PATH = Path("data/simpleicons.json")

SLUG_DATA_URL = "https://raw.githubusercontent.com/simple-icons/simple-icons/develop/slugs.md"  # fmt: skip
SIMPLE_ICON_JSON_URL = "https://raw.githubusercontent.com/simple-icons/simple-icons/develop/_data/simple-icons.json"

UNAVAILABLE_ICONS = {
    "json": "var(--md-typeset-color)",
    "rust": "var(--md-typeset-color)",
    "rye": "90C820",
}


def _fetch_icons_with_slug() -> list[dict[str, str]]:
    with urlopen(SLUG_DATA_URL) as response:  # noqa: S310
        data = response.read().decode("utf-8").splitlines()
    slug_md_lines = data[10:]

    def extract_slug(line: str) -> dict[str, str]:
        title, slug = line[3:-3].split("` | `", 1)
        return {"title": title, "slug": slug}

    return [extract_slug(i) for i in slug_md_lines]


def _fetch_icons_with_hex():
    with urlopen(SIMPLE_ICON_JSON_URL) as response:  # noqa: S310
        data = json.loads(response.read().decode("utf-8"))
    return [{"title": icon["title"], "hex": icon["hex"]} for icon in data]


def get_all_icons_dict() -> dict[str, str]:
    data: dict[str, str] = {}
    icons_with_hex = _fetch_icons_with_hex()
    icons_with_slug = _fetch_icons_with_slug()
    for slug in icons_with_slug:
        for hex in icons_with_hex:
            if slug["title"] == hex["title"]:
                data[slug["slug"]] = hex["hex"]
                break
    return data


def generate_css(all_icons_dict: dict[str, str], slugs_set: set[str]) -> str:
    """Generates CSS for each tech."""
    css_lines = [
        "/*\nðŸ˜Ž Generated by 'docs_src/generate_simpleicons_css.py'\n*/",
        "",
    ]
    for slug in sorted(slugs_set):
        color = UNAVAILABLE_ICONS.get(slug) or all_icons_dict.get(
            slug, "var(--md-typeset-color)"
        )
        color = color if color.startswith("v") else f"#{color}"
        css_lines.append(f".{slug} {{ color: {color}; }}")
        css_lines.append(f".{slug}-hover:hover {{ color: {color}; }}")
    return "\n".join(css_lines) + "\n"


if __name__ == "__main__":
    slugs_set: set[str] = set(json.loads(SIMPLEICONS_JSON_PATH.read_bytes()))
    all_icons_dict = get_all_icons_dict()
    simpleicons_css = generate_css(all_icons_dict, slugs_set)
    SIMPLEICONS_CSS_PATH.write_text(simpleicons_css)

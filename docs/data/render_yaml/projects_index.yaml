$schema: https://raw.githubusercontent.com/arv-anshul/arv-anshul.github.io/main/schemas/projects_index-schema.json
projects:
  canvas-ai.md:
    title: Canvas AI
    description: |
      Parse and Analyse image containing mathematical expression or problem (it can be in a drawing format) using AI to
      give a structured response by leveraging Langchain framework. Also created API out of it using FastAPI which has
      containerized with Docker.
    urls:
      - title: GitHub Repository
        icon: simple-github
        url: https://github.com/arv-anshul/canvas-ai
    tags:
      - astral
      - docker
      - fastapi
      - googlegemini
      - langchain
      - precommit
      - pydantic
    completed_on: September, 2024

  yt-watch-history/index.md:
    title: YouTube Watch History
    description: |
      A streamlit app where you can upload your **YouTube Watch History Data** to see insights on your viewing pattern.
      Your data will go through a ML Model which predicts the **ContentType** of each video your have watch. The app
      fetches more details of each video through **YouTube API**. There is also a **Channel Recommender System** in the
      app which recommend you similar channels on the basis of channel's video titles and tags they had used.
    urls:
      - title: GitHub Repository (v1)
        icon: simple-github
        url: https://github.com/arv-anshul/yt-watch-history
      - title: GitHub Repository (v2)
        icon: simple-github
        url: https://github.com/arv-anshul/yt-watch-history-v2
      - title: LinkedIn Post
        icon: simple-linkedin
        url: https://www.linkedin.com/posts/arv-anshul_i-am-building-this-streamlit-app-this-activity-7140558851036098560-wwnU?utm_source=share&utm_medium=member_desktop
      - title: Jupyter Notebooks
        icon: simple-jupyter
        url: https://github.com/arv-anshul/notebooks/tree/main/yt-watch-history
    tags:
      - docker
      - fastapi
      - jupyter
      - mlflow
      - mongodb
      - plotly
      - polars
      - pydantic
      - ruff
      - scikitlearn
      - streamlit
      - youtube
    completed_on: January, 2024

  spotify-analysis.md:
    title: Spotify Analysis
    description: |
      Analyse your Spotify Streaming data and get some insights from it like whom & when
      you listen your favorite Tracks, Artists, Playlists or Albums.
      </br>
      Created Jupyter Notebook where you can upload your data and get the analysis by
      running the notebook.
    extra_desc:
      - Analyse your Streaming History, Personal Playlists.
      - Know your top tracks and artists by year, month, week and day.
      - Know your most played track, artist, playlist by year and month.
    urls:
      - title: Jupyter Notebooks
        icon: simple-jupyter
        url: https://github.com/arv-anshul/notebooks/tree/main/spotify-analysis
    tags:
      - jupyter
      - plotly
      - polars
      - ruff
      - rye
      - scikitlearn
      - spotify
      - streamlit
    completed_on: March, 2024

  https://github.com/arv-anshul/ecommerce-scrapper-api:
    title: E-commerce Scrapper API - FastAPI
    description: |
      Scrape data from E-commerce websites like Flipkart by searching products like
      iphone, laptops and more. Also you can export the scrapped data into JOSN format.
      API will do all the works for you, you have to just make a request with some
      endpoints.
    extra_desc:
      - Modular Coding, Async Programming.
      - I have also written some tests using `fastapi` builtin `TestClient()`.
        [See Here](https://github.com/arv-anshul/ecommerce-scrapper-api/tree/main/ecommerce/tests/test_api/test_flipkart){ target=blank_ }
    urls:
      - title: GitHub Repository
        icon: simple-github
        url: https://github.com/arv-anshul/ecommerce-scrapper-api
      - title: LinkedIn Post
        icon: simple-linkedin
        url: https://www.linkedin.com/posts/arv-anshul_fastapi-api-ecommerce-activity-7128575593570340864-WE2m?utm_source=share&utm_medium=member_desktop
    tags:
      - fastapi
      - flipkart
      - pydantic
    completed_on: November, 2023

  https://github.com/arv-anshul/campusx-real-estate:
    title: Indian Real Estate Analyser and Price Prediction
    description: |
      Analyse real estate of India. I have scrapped data from [99acres.com](https://99acres.com).
      You can also make prediction of property prices by providing you requirements like
      BHK, AREA, LOCATION and more.
    extra_desc:
      - I have made this project end-to-end.
      - Uses `streamlit` library to show the analysis with beautiful plots from `plotly`.
    urls:
      - title: GitHub Repository
        icon: simple-github
        url: https://github.com/arv-anshul/campusx-real-estate
      - title: LinkedIn Post
        icon: simple-linkedin
        url: https://www.linkedin.com/posts/arv-anshul_update-regarding-my-real-estate-project-activity-7109444738855948288-NyI9?utm_source=share&utm_medium=member_desktop
    tags:
      - plotly
      - scikitlearn
      - streamlit
    completed_on: October, 2023

  https://github.com/arv-anshul/freeapi-py:
    title: FreeAPI in Python using FastAPI
    description: |
      Created similar APIs present in **freeapi.app** project using Python with FastAPI and MongoDB.
      I've used Docker so that anyone can easily reproduce this project in their system.
      I haven't deployed this project but you can use Docker to spawn the APIs in local.
      You'll get endpoints for todo, quotes, github user and repository and fun endpoints.
    urls:
      - title: GitHub Repository
        icon: simple-github
        url: https://github.com/arv-anshul/freeapi-py
      - title: LinkedIn Post
        icon: simple-linkedin
        url: https://www.linkedin.com/posts/arv-anshul_im-happy-to-share-this-freeapi-in-python-activity-7192135714594000896-ZRqh?utm_source=share&utm_medium=member_desktop
    tags:
      - docker
      - fastapi
      - mongodb
      - python
      - rye
    completed_on: May, 2024

  https://github.com/arv-anshul/curler:
    title: Curler
    description: |
      Curler is a tool which let's you parse `curl` command into python with ease.
      Also, you can use that parsed object with `requests`, `httpx` like library to make
      request with `curl` commands.
    urls:
      - title: GitHub Repository
        icon: simple-github
        url: https://github.com/arv-anshul/curler
      - title: LinkedIn Post
        icon: simple-linkedin
        url: https://www.linkedin.com/posts/arv-anshul_hey-i-am-happy-to-tell-you-that-i-activity-7118254699127975939-ePyf?utm_source=share&utm_medium=member_desktop
      - title: Package on PyPi
        icon: simple-pypi
        url: https://pypi.org/p/curler
    tags:
      - pypi
      - python
    completed_on: November, 2023

  https://github.com/arv-anshul/99acres-scrape:
    title: Web Scrapping 99acres.com
    description: |
      Scrape [99acres.com](https://99acres.com){ target=blank_ } with a Streamlit
      Web-UI and download the data in **CSV** format.
    extra_desc:
      - You have to use `cURL` command to scrape the data. (you can get the curl command from browser's network tab).
    urls:
      - title: GitHub Repository
        icon: simple-github
        url: https://github.com/arv-anshul/99acres-scrape
      - title: Datasets on Kaggle
        icon: simple-kaggle
        url: https://www.kaggle.com/datasets/arvanshul/gurgaon-real-estate-99acres-com
      - title: LinkedIn Post
        icon: simple-linkedin
        url: https://www.linkedin.com/posts/arv-anshul_python-asynchronousprogramming-datascience-activity-7101173151123861504-Y29E?utm_source=share&utm_medium=member_desktop
      - title: Streamlit App
        icon: simple-streamlit
        url: https://arv-anshul-99acres-2a.streamlit.app/
    tags:
      - curl
      - pandas
      - python
      - streamlit
    completed_on: October, 2023

  campusx.md:
    title: CampusX Resources
    description: |
      This project involves gathering data from a course website's HTML structure, followed by developing Python scripts for parsing and extracting essential data. HTTP requests are then made to obtain session resources, with robust testing and data structure maintenance ensuring integrity. Utilizing `mkdocs` and `mkdocs-material`, a professional web page is generated and hosted on GitHub Pages via CI/CD with GitHub Actions.
    urls:
      - title: GitHub Repository
        icon: simple-github
        url: https://github.com/arv-anshul/campusx
      - title: LinkedIn Post
        icon: simple-linkedin
        url: https://www.linkedin.com/posts/arv-anshul_yesterday-nitish-singh-sir-recommend-activity-7162317549496381440-JskB?utm_source=share&utm_medium=member_desktop
      - title: Project's Website
        icon: simple-materialformkdocs
        url: https://arv-anshul.github.io/campusx
    tags:
      - curl
      - dotenv
      - githubactions
      - githubpages
      - jinja
      - json
      - materialformkdocs
      - precommit
      - pytest
      - python
      - rye
    completed_on: March, 2023
